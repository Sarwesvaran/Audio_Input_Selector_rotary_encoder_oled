#define sw 7
#define ch1 11
#define ch2 10
#define ch3 9
#include <Encoder.h>
#include <EEPROM.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <MsTimer2.h>

#define OLED_RESET -1
Adafruit_SSD1306 display(OLED_RESET);


#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

Encoder myEnc(2, 3);
//   avoid using pins with LEDs attached
int menu = 1, temp, sel, menu_sel, scroll;
int menu_mem = 0, boot = 0;
long oldPosition  = -999, newPosition;


const unsigned char aux_menu [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0x99, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0x9d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0x9d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0x9d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0x99, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x38, 0x1c, 0x19, 0xc3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x3c, 0x1c, 0x18, 0xe7, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x3c, 0x1c, 0x18, 0x77, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x7e, 0x1c, 0x18, 0x7e, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x7e, 0x1c, 0x18, 0x3c, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x66, 0x1c, 0x18, 0x1c, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0xe7, 0x1c, 0x18, 0x3c, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0xff, 0x1c, 0x18, 0x7e, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x01, 0xff, 0x1c, 0x18, 0x76, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x01, 0xc3, 0x8e, 0x38, 0xe7, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x00, 0x01, 0x83, 0x8f, 0xf1, 0xc3, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x00, 0x03, 0x81, 0x87, 0xf1, 0xc1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0x7e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xce, 0x7b, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xee, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xed, 0xb7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xed, 0xb7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xe9, 0xdb, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1b, 0xdc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// '2b', 128x32px
const unsigned char cd_menu [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1e, 0x7c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xce, 0x7b, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xec, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xed, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xec, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xc9, 0xd9, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1b, 0xdc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0xf8, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x03, 0xfc, 0x7f, 0xc0, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x07, 0x0e, 0x71, 0xe0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x06, 0x06, 0x70, 0xe0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x0e, 0x00, 0x70, 0x60, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x0e, 0x00, 0x70, 0x60, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x0e, 0x00, 0x70, 0x60, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x0e, 0x00, 0x70, 0x60, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x06, 0x0e, 0x70, 0xe0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x07, 0x1e, 0x70, 0xe0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x03, 0xfc, 0x7f, 0xc0, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x01, 0xf8, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbd, 0xdb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xdb, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x5d, 0xdc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x6d, 0xde, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x6d, 0xdc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xed, 0xdb, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf6, 0x3b, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// '2c', 128x32px
const unsigned char dac_menu [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x79, 0xd9, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xb9, 0xdd, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xb9, 0xdc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x99, 0xdc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x19, 0xdc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xdd, 0x99, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xce, 0x3b, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0xfe, 0x03, 0x80, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x00, 0x01, 0xff, 0x03, 0x80, 0xff, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x01, 0x87, 0x07, 0xc1, 0xc3, 0x80, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x01, 0x83, 0x87, 0xc1, 0xc1, 0x80, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x01, 0x83, 0x8e, 0xc1, 0x80, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x81, 0x8e, 0xe1, 0x80, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x00, 0x01, 0x81, 0x8c, 0xe1, 0x80, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf8, 0x00, 0x01, 0x81, 0x9f, 0xf1, 0x81, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x01, 0x83, 0x9f, 0xf1, 0xc3, 0x80, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x01, 0x87, 0x18, 0x71, 0xe7, 0x80, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x00, 0x01, 0xff, 0x38, 0x38, 0xff, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0xfe, 0x30, 0x38, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xec, 0xd9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

const unsigned char aux_sym [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xfc, 0x0f, 0xfe, 0x0f, 0x80, 0xff, 0x81, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xfc, 0x0f, 0xfe, 0x0f, 0xc0, 0xff, 0x03, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xfc, 0x0f, 0xfe, 0x0f, 0xe0, 0x7e, 0x07, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xfc, 0x0f, 0xfe, 0x0f, 0xf0, 0x3c, 0x0f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xfc, 0x0f, 0xfe, 0x0f, 0xf8, 0x18, 0x1f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0x04, 0x1f, 0xfc, 0x0f, 0xfe, 0x0f, 0xfc, 0x00, 0x3f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xfe, 0x0e, 0x0f, 0xfc, 0x1f, 0xfe, 0x0f, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xfe, 0x0e, 0x0f, 0xfc, 0x1f, 0xfe, 0x0f, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xfc, 0x1f, 0x07, 0xfc, 0x1f, 0xfe, 0x0f, 0xff, 0x00, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xfc, 0x1f, 0x07, 0xfc, 0x1f, 0xfe, 0x0f, 0xff, 0x81, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xf8, 0x3f, 0x03, 0xfc, 0x1f, 0xfe, 0x0f, 0xff, 0x00, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xf8, 0x3f, 0x83, 0xfc, 0x1f, 0xfe, 0x0f, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xf0, 0x00, 0x01, 0xfc, 0x1f, 0xfe, 0x0f, 0xfc, 0x00, 0x3f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xf0, 0x00, 0x01, 0xfc, 0x1f, 0xfc, 0x0f, 0xf8, 0x10, 0x3f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0xfc, 0x0f, 0xfc, 0x0f, 0xf0, 0x38, 0x1f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xe0, 0xff, 0xe0, 0xfe, 0x0f, 0xfc, 0x1f, 0xe0, 0x7c, 0x0f, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xc1, 0xff, 0xe0, 0x7e, 0x03, 0xf0, 0x1f, 0xc0, 0x7e, 0x07, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0x81, 0xff, 0xf0, 0x7f, 0x00, 0x00, 0x3f, 0xc0, 0xff, 0x03, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0x83, 0xff, 0xf0, 0x3f, 0x80, 0x00, 0x7f, 0x81, 0xff, 0x81, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0x03, 0xff, 0xf8, 0x3f, 0xe0, 0x03, 0xff, 0x03, 0xff, 0x80, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char cd_sym [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0e, 0x66, 0xfc, 0xdc, 0xce,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0c, 0x02, 0x48, 0x48, 0x0e,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xed, 0xd8, 0x4b, 0x0b, 0xde,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xed, 0x48, 0x08, 0x83, 0x5e,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xe4, 0x63, 0xbb, 0xb4, 0x5e,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xe7, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xe0, 0x3f, 0xff, 0xff, 0x80, 0xec, 0x18, 0x01, 0xc0, 0x1e,
  0x7f, 0xff, 0xff, 0xff, 0xfc, 0x03, 0xc0, 0x0f, 0xff, 0xff, 0x3f, 0xed, 0xd3, 0xfd, 0x9f, 0xee,
  0x7f, 0xff, 0xff, 0xff, 0xf8, 0xe1, 0xc0, 0x07, 0xff, 0xff, 0x7d, 0xed, 0xd7, 0xfd, 0xbd, 0xee,
  0x7f, 0xff, 0xff, 0xff, 0xf1, 0xf1, 0xc7, 0xe3, 0xff, 0xff, 0x70, 0xed, 0xd7, 0x81, 0xb8, 0xee,
  0x7f, 0xff, 0xff, 0xff, 0xf3, 0xf9, 0xc7, 0xe3, 0xff, 0xff, 0x76, 0xed, 0xd7, 0x7f, 0xba, 0x6e,
  0x7f, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xc7, 0xf3, 0xff, 0xff, 0x76, 0xed, 0xd7, 0x7f, 0xba, 0x6e,
  0x7f, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xc7, 0xf3, 0xff, 0xff, 0x76, 0xed, 0xd7, 0x81, 0xbb, 0x0e,
  0x7f, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xc7, 0xf3, 0xff, 0xff, 0x76, 0xed, 0xd7, 0xfc, 0xbb, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xc7, 0xf3, 0xff, 0xff, 0x76, 0xed, 0xd3, 0xfe, 0xbb, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xc7, 0xf3, 0xff, 0xff, 0x76, 0xed, 0xd8, 0x1e, 0xbb, 0x0e,
  0x7f, 0xff, 0xff, 0xff, 0xf3, 0xf9, 0xc7, 0xf3, 0xff, 0xff, 0x76, 0xed, 0xdf, 0xee, 0xba, 0x6e,
  0x7f, 0xff, 0xff, 0xff, 0xf1, 0xf1, 0xc7, 0xe3, 0xff, 0xff, 0x76, 0xed, 0xd8, 0x0e, 0xba, 0x6e,
  0x7f, 0xff, 0xff, 0xff, 0xf8, 0xe1, 0xc7, 0x87, 0xff, 0xff, 0x70, 0xed, 0xd3, 0xfe, 0xb8, 0xee,
  0x7f, 0xff, 0xff, 0xff, 0xfc, 0x03, 0xc0, 0x0f, 0xff, 0xff, 0x7d, 0xed, 0xd7, 0xfe, 0xbd, 0xee,
  0x7f, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xc0, 0x3f, 0xff, 0xff, 0xbf, 0xed, 0x93, 0xfd, 0x9f, 0xce,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0c, 0x38, 0x03, 0xc0, 0x1e,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8a, 0x30, 0x9b, 0xcd, 0x26, 0x8e,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x20, 0xe4, 0x9b, 0xcd, 0x08, 0x2e,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x20, 0xa5, 0x8b, 0xc5, 0x18, 0x2e,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0a, 0x05, 0x28, 0x90, 0x40, 0x0e,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


const unsigned char dac_sym [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x01, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0xfe,
  0x7f, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0x9f, 0xff, 0x80, 0x00, 0x7f, 0xfe,
  0x7f, 0xff, 0xe0, 0x1f, 0xff, 0xfc, 0xf3, 0xff, 0xff, 0xff, 0x9f, 0xff, 0x00, 0x00, 0x3f, 0xfe,
  0x7f, 0xff, 0xc3, 0x0f, 0xff, 0xf8, 0xf3, 0xff, 0xff, 0xff, 0x9f, 0xff, 0x0f, 0xfc, 0x1f, 0xfe,
  0x7f, 0xff, 0x8f, 0xc7, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xfe, 0x1f, 0xfe, 0x1f, 0xfe,
  0x7f, 0xff, 0x9f, 0xe7, 0x98, 0xf0, 0x73, 0xf0, 0xfe, 0x0f, 0x9f, 0xfe, 0x1f, 0xff, 0x0f, 0xfe,
  0x7f, 0xff, 0x1f, 0xe3, 0x80, 0x70, 0x33, 0xc0, 0x78, 0x07, 0x9f, 0xfc, 0x1f, 0xff, 0x0f, 0xfe,
  0x7f, 0xff, 0x1f, 0xe3, 0x8e, 0x38, 0xf3, 0xc6, 0x38, 0xc7, 0x9f, 0xfc, 0x1e, 0x1e, 0x0f, 0xfe,
  0x7f, 0xff, 0x1f, 0xe3, 0x8f, 0x38, 0xf3, 0x8f, 0x3f, 0xe7, 0x9f, 0xfc, 0x1e, 0x0f, 0x0f, 0xfe,
  0x7f, 0xff, 0x1f, 0xe3, 0x9f, 0x18, 0xf3, 0x9f, 0xff, 0xc7, 0x9f, 0xfc, 0x3e, 0x0f, 0x8f, 0xfe,
  0x7f, 0xff, 0x1f, 0xe3, 0x9f, 0x18, 0xf3, 0x9f, 0xfc, 0x07, 0x9f, 0xfc, 0x1e, 0x1f, 0x0f, 0xfe,
  0x7f, 0xff, 0x9f, 0xe7, 0x9f, 0x18, 0xf3, 0x9f, 0xf8, 0x67, 0x9f, 0xfc, 0x1f, 0x3e, 0x0f, 0xfe,
  0x7f, 0xff, 0x8f, 0xc7, 0x9f, 0x38, 0xf3, 0x8f, 0x31, 0xe7, 0x9f, 0xfc, 0x1f, 0xff, 0x0f, 0xfe,
  0x7f, 0xff, 0x87, 0x87, 0x8e, 0x38, 0xf3, 0x8e, 0x31, 0xc7, 0x9f, 0xfe, 0x1f, 0xff, 0x0f, 0xfe,
  0x7f, 0xff, 0xc0, 0x0f, 0x80, 0x78, 0x33, 0xc0, 0x38, 0x07, 0x9f, 0xfe, 0x1f, 0xff, 0x1f, 0xfe,
  0x7f, 0xff, 0xf0, 0x3f, 0x90, 0xfc, 0x33, 0xe0, 0xfc, 0x33, 0x9f, 0xff, 0x00, 0x00, 0x3f, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x01, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x07, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void setup() {
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();
  pinMode(sw, INPUT);
  pinMode(ch1, OUTPUT);
  pinMode(ch2, OUTPUT);
  pinMode(ch3, OUTPUT);
  MsTimer2::set(3, to_Timer); MsTimer2::start();
  digitalWrite(ch1, HIGH); digitalWrite(ch2, HIGH); digitalWrite(ch3, HIGH);
  delay(2000);
  
  if (EEPROM.read(menu_mem) == 1)
  {
    temp = 1;
    digitalWrite(ch1, LOW);
    digitalWrite(ch2, HIGH);
    digitalWrite(ch3, HIGH);
  }
  if (EEPROM.read(menu_mem) == 2)
  {
    temp = 1;
    digitalWrite(ch1, HIGH);
    digitalWrite(ch2, LOW);
    digitalWrite(ch3, HIGH);
  }
  if (EEPROM.read(menu_mem) == 3)
  {
    temp = 1;
    digitalWrite(ch1, HIGH);
    digitalWrite(ch2, HIGH);
    digitalWrite(ch3, LOW);
  }
  // Clear the buffer.
  display.clearDisplay();

}
void loop() {

  // long newPosition = myEnc.read() / 4;

  if (EEPROM.read(menu_mem) == 1 and temp == 1)
  {
    temp = 0;
    display.drawBitmap(0, 0,  aux_sym, 128, 64, BLACK, WHITE);
    display.display();
  }
  if (EEPROM.read(menu_mem) == 2 and temp == 1)
  {
    temp = 0;
    display.drawBitmap(0, 0,  cd_sym, 128, 64, BLACK, WHITE);
    display.display();
  }
  if (EEPROM.read(menu_mem) == 3 and temp == 1)
  {
    temp = 0;
    display.drawBitmap(0, 0,  dac_sym, 128, 64, BLACK, WHITE);
    display.display();
  }

  if ((newPosition != oldPosition)) {
    oldPosition = newPosition;
    menu = menu + newPosition;
    myEnc.write(0); newPosition = 0;
    if (boot == 1)
    {
      myEnc.write(0);
      newPosition = 0;
      digitalWrite(ch1, HIGH); digitalWrite(ch2, HIGH); digitalWrite(ch3, HIGH);
      temp = 0;
      sel = 0;
      if (menu > 3)
        menu = 1;
      if (menu < 1)
        menu = 3;

      //Serial.println(menu);

      if (menu == 1)
      {
        display.drawBitmap(0, 0,  aux_menu, 128, 64, BLACK, WHITE);
      }
      if (menu == 2)
      {
        display.drawBitmap(0, 0,  cd_menu, 128, 64, BLACK, WHITE);
      }
      if (menu == 3)
      {
        display.drawBitmap(0, 0,  dac_menu, 128, 64, BLACK, WHITE);
      }
      display.display();
    }
    boot = 1;
  }
  if (digitalRead(sw) == LOW and sel == 0)
  {
    EEPROM.write(menu_mem, menu);
    sel = 1;

    if (EEPROM.read(menu_mem) == 1 and temp == 0)
    {
      temp = 1;
      digitalWrite(ch1, LOW);
      digitalWrite(ch2, HIGH);
      digitalWrite(ch3, HIGH);
    }
    if (EEPROM.read(menu_mem) == 2 and temp == 0)
    {
      temp = 1;
      digitalWrite(ch1, HIGH);
      digitalWrite(ch2, LOW);
      digitalWrite(ch3, HIGH);
    }
    if (EEPROM.read(menu_mem) == 3 and temp == 0)
    {
      temp = 1;
      digitalWrite(ch1, HIGH);
      digitalWrite(ch2, HIGH);
      digitalWrite(ch3, LOW);
    }
  }
}
void to_Timer() {
  newPosition = myEnc.read() / 4;
}
